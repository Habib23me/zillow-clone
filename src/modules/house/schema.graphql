"""
The current status of the property on Zillow
"""
enum HomeStatus {
  FOR_SALE
  FOR_RENT
  SOLD
}

"""
The type of home property it is
"""
enum HomeType {
  HOUSES
  APARTMENT
  CONDOS
}

"""
A house type that contains all the information about a house
that is listed on zillow
"""
type House {
  "The house's unique id"
  id: ID!
  "The house's address street address"
  streetAddress: String!
  "The house's address city"
  city: String!
  "The house's address state"
  state: String!
  "The house's address zip code"
  zipCode: String!
  "The house's geographical latitude"
  lat: Float!
  "The house's geographical longtiude"
  lng: Float!
  "The price the house is listed for"
  price: Float
  "The house's total living area in squared meters"
  livingArea: Float
  "The date the house is sold only for SOLD homeTypes"
  dateSold: DateTime
  "The house's number of bathrooms"
  noOfBathrooms: Float
  "The house's number of bedrooms"
  noOfBedrooms: Int
  "The house's number of parinkg spots"
  noOfParkingSpots: Int
  "The year the house was built on"
  yearBuilt: Int
  "Boolean indicating if the house is open for vistors"
  isOpenHouse: Boolean
  "Boolean indicating if the house is listed for the public to see"
  isPublished: Boolean
  "The house's current status"
  homeStatus: HomeStatus
  "The house's type"
  homeType: HomeType
  "The user who listed the property"
  lister: User!
  "The amount of days since the home was listed on zillow"
  daysListed: Int!
  "A list of images belonging to a house"
  images: [Image]!
  "Contact Forms submitted to the house"
  forms: [Form]! @isAuthenticated
  "A Boolean indicating if the house is saved by the user or not"
  isSaved: Boolean @isAuthenticated
}

"""
An input type for new houses to be listed
"""
input newHouseInput {
  "The house's address street address"
  streetAddress: String!
  "The house's address city"
  city: String!
  "The house's address state"
  state: String!
  "The house's address zip code"
  zipCode: String!
  "The house's geographical latitude"
  lat: Float
  "The house's geographical longtiude"
  lng: Float
  "The price the house is listed for"
  price: Float
  "The house's total living area in squared meters"
  livingArea: Float
  "The house's number of bathrooms"
  noOfBathrooms: Float
  "The house's number of bedrooms"
  noOfBedrooms: Int
  "The house's number of parinkg spots"
  noOfParkingSpots: Int
  "The year the house was built on"
  yearBuilt: Int
  "Boolean indicating if the house is open for vistors"
  isOpenHouse: Boolean
  "The house's current status"
  homeStatus: HomeStatus
  "The house's type"
  homeType: HomeType
}

"""
Input type for updating existing house input
"""
input updateHouseInput {
  "The house's unique id"
  id: ID!
  "The price the house is listed for"
  price: Float
  "The house's total living area in squared meters"
  livingArea: Float
  "The house's number of bathrooms"
  noOfBathrooms: Float
  "The house's number of bedrooms"
  noOfBedrooms: Int
  "The house's number of parinkg spots"
  noOfParkingSpots: Int
  "The year the house was built on"
  yearBuilt: Int
  "Boolean indicating if the house is open for vistors"
  isOpenHouse: Boolean
  "The house's current status"
  homeStatus: HomeStatus
  "The house's type"
  homeType: HomeType
}

"""
Input type for verifting address'
"""
input addressInput {
  "The address' street address"
  streetAddress: String!
  "The address' city"
  city: String
  "The address' state"
  state: String
  "The address' zip code"
  zipCode: String
}

"""
Type that contains info about a specific place
"""
type AddressInfo {
  "Formatted Address String"
  formattedAddress: String!
  "The address' geographical latitude"
  lat: Float!
  "The address' geographical longtiude"
  lng: Float!
  "The address' street address"
  streetAddress: String
  "The address' city"
  city: String
  "The address' state"
  state: String
  "The address' zip code"
  zipCode: String
  "The address' country"
  country: String
  "The house listed under this address if there is one"
  house: House
}

"""
Input type for uploading an Image for a house
"""
input uploadHouseImageInput {
  "The image to upload"
  file: Upload!
  "The id of the house to upload to"
  houseId: ID!
}

extend type Query {
  """
  Get's the house information based on it's id
  """
  house(id: ID!): House
  """
  Verify a string address check if it is already listed or not
  """
  verifyAddress(input: addressInput!): AddressInfo!
}

extend type Mutation {
  """
  Publish house and make it available for everyone to see publicly
  """
  publishHouse(id: ID!): House! @isAuthenticated
  """
  unpublish house and to mkae it invisble publicly
  """
  unpublishHouse(id: ID!): House! @isAuthenticated
  """
  List a new house
  """
  addHouse(input: newHouseInput!): House! @isAuthenticated
  """
  Upload pictures of a house
  """
  uploadHousePicture(input: uploadHouseImageInput): Image! @isAuthenticated
  """
  Update alreday existing house information
  """
  updateHouse(input: updateHouseInput!): House! @isAuthenticated
  """
  Remove an image from a house based on it's id
  """
  removeHousePicture(imageId: ID!): House! @isAuthenticated
  """
  Add a house to saved houses
  """
  saveHouse(houseId: ID!): House @isAuthenticated
  """
  Remove a house from saved houses
  """
  removeSavedHouse(houseId: ID!): House @isAuthenticated
}
