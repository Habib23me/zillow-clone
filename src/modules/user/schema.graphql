enum Role {
  REGISTERED
  AGENT
}

type User {
  id: ID!
  email: String!
  firstName: String
  lastName: String
  username: String!
  image: String
  role: Role!
  isEmailVerified: Boolean!
  houses: [House]
  forms: [Form]
  savedHouses: [House]
}

input SignInInput {
  email: String!
  password: String!
}

input SignUpInput {
  email: String!
  username: String
  firstName: String!
  lastName: String!
  password: String!
  role: Role!
}

type Image {
  id: ID
  imagePath: String!
  fullURL: String!
}

input UpdateProfileInput {
  firstName: String
  lastName: String
  username: String
}

input resetPasswordInput {
  resetToken: String
  newPassword: String
}

input changePasswordInput {
  oldPassword: String
  newPassword: String
}

extend type Query {
  me: User! @isAuthenticated
  isUsernameTaken(username: String): Boolean
  isEmailUsed(email: String): Boolean
}

extend type Mutation {
  signup(input: SignUpInput!): String!
  login(input: SignInInput!): String!
  sendPasswordResetEmail(email: String!): Boolean!
  resetPassword(input: resetPasswordInput!): Boolean!
  changeUsername(username: String!): User! @isAuthenticated
  changePassword(input: changePasswordInput!): Boolean! @isAuthenticated
  uploadProfilePicture(file: Upload!): Image! @isAuthenticated
  updateProfile(input: UpdateProfileInput!): User! @isAuthenticated
}
